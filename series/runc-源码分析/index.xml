<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>runC 源码分析 - series - Nitro's Blog</title><link>https://nitroc.org/series/runc-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</link><description>runC 源码分析 - series - Nitro's Blog</description><generator>Hugo -- gohugo.io</generator><language>cn</language><lastBuildDate>Wed, 18 May 2022 21:18:12 +0800</lastBuildDate><atom:link href="https://nitroc.org/series/runc-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/" rel="self" type="application/rss+xml"/><item><title>spec 子命令的实现</title><link>https://nitroc.org/posts/read-source-code-of-runc-spec-subcommand/</link><pubDate>Wed, 18 May 2022 21:18:12 +0800</pubDate><author><name>Nitro Cao</name></author><guid>https://nitroc.org/posts/read-source-code-of-runc-spec-subcommand/</guid><description>&lt;p>本篇文章介绍 OCI 标准以及 runC 的 &lt;code>spec&lt;/code> 子命令的实现。只关注 Linux 平台的实现。&lt;/p></description></item><item><title>准备 runC 源码环境</title><link>https://nitroc.org/posts/read-source-code-of-runc-prepare-environment/</link><pubDate>Wed, 18 May 2022 20:16:22 +0800</pubDate><author><name>Nitro Cao</name></author><guid>https://nitroc.org/posts/read-source-code-of-runc-prepare-environment/</guid><description>&lt;p>本篇文章介绍如何准备 runC 源码分析的环境，以及 Golang 项目常见的项目结构。runC 的版本为 &lt;code>v1.1.2&lt;/code>。&lt;/p></description></item></channel></rss>